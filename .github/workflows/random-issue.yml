# .github/workflows/random-issue.yml
name: Create Random Issue with Mistral

on:
  schedule:
    # –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
    - cron: '*/5 * * * *'

permissions:
  issues: write

env:
  # –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Secret —Å –≤–∞—à–∏–º –∫–ª—é—á–æ–º
  MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}

jobs:
  create_random_issue:
    runs-on: ubuntu-latest

    steps:
      - name: Generate dumb commit message via Mistral
        id: gen
        run: |
          # –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ Mistral Inference API
          RESPONSE=$(curl -s \
            -H "Authorization: Bearer $MISTRAL_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{"inputs":"Generate a dumb commit message."}' \
            https://api.mistral.ai/inference/v1/models/mistral-7b-instruct)
          
          # –ø–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –ø–æ–ª–µ —Å —Ç–µ–∫—Å—Ç–æ–º ‚Äì generated_text)
          MESSAGE=$(echo "$RESPONSE" | jq -r '.generated_text // empty' | head -n1)

          # –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –ø—É—Å—Ç–æ, —Å—Ç–∞–≤–∏–º fallback
          if [ -z "$MESSAGE" ]; then
            MESSAGE="ü§ñ Commit message overload!"
          fi

          echo "title=$MESSAGE" >> $GITHUB_OUTPUT

      - name: Create issue
        uses: peter-evans/create-issue@v6
        with:
          title: ${{ steps.gen.outputs.title }}
          body: |
            –≠—Ç–æ issue —Å —Ç—É–ø—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º Mistral API.
          labels: automated
